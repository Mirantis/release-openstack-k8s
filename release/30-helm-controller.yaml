---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tiller
  namespace: osh-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: tiller
  namespace: osh-system
---
apiVersion: v1
kind: Service
metadata:
  name: helm-controller-service
  namespace: osh-system
  labels:
    app: helm-controller
spec:
  selector:
    app: helm-controller
  ports:
  # tiller probe/metrics port
  - port: 44135
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tiller
  namespace: osh-system
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: helm-controller
  name: helm-controller
  namespace: osh-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm-controller
  serviceName: helm-controller-service
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        app: helm-controller
    spec:
      serviceAccountName: tiller
      containers:
      - name: tiller
        args:
        - --listen=localhost:44134
        command:
        - /tiller
        env:
        - name: TILLER_NAMESPACE
          value: osh-system
        - name: TILLER_HISTORY_MAX
          value: "0"
        image: docker-kaas-local.artifactory.mirantis.com/lcm/helm/tiller:v2.15.2-1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /liveness
            port: 44135
          initialDelaySeconds: 1
          timeoutSeconds: 1
        ports: []
        readinessProbe:
          httpGet:
            path: /readiness
            port: 44135
          initialDelaySeconds: 1
          timeoutSeconds: 1
        resources: {}
      - name: controller
        command: ["/helm-controller", "-host", "localhost:44134", "-home", "/helm", "-debug"]
        env:
        - name: TMPDIR
          value: /helm
        image:  docker-kaas-local.artifactory.mirantis.com/lcm/lcm-controller:v0.2.0-43
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: home
          mountPath: /helm
      volumes:
      - name: home
        emptyDir: {}
