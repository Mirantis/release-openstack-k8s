---
apiVersion: v1
kind: Namespace
metadata:
  name: stacklight
---
apiVersion: lcm.mirantis.com/v1alpha1
kind: HelmBundle
metadata:
  name: stacklight
  namespace: stacklight
spec:
  repositories:
  - name: stacklight
    url: https://artifactory.mirantis.com/binary-kaas-local/stacklight/helm
  releases:
  - name: stacklight
    chart: stacklight/stacklight
    version: 0.1.2-mcp-159
    namespace: stacklight
    values:
      global:
        dockerBaseUrl: docker-kaas-local.artifactory.mirantis.com
        helmBaseUrl: https://artifactory.mirantis.com/binary-kaas-local
      createHelmBundleCRD: false
      deployController: false
      highAvailabilityEnabled: true
      nginxExporter:
        enabled: false
      openstack:
        enabled: true
      ceph:
        enabled: true
      calico:
        enabled: false
      nodeSelector:
        default:
          role: stacklight
          stacklight: enabled
      platform: ucp
      storage:
        componentStorageClasses:
          elasticsearch: "lvp-fake-root"
          prometheusServer: "lvp-fake-root"
---
# Temporary expose Alerta UI
apiVersion: v1
kind: Service
metadata:
  name: alerta-lb
  namespace: stacklight
spec:
  selector:
    app: alerta
    release: alerta
  ports:
    - port: 80
      targetPort: http
  type: LoadBalancer
---
# Temporary expose Alertmanager UI
apiVersion: v1
kind: Service
metadata:
  name: prometheus-alertmanager-lb
  namespace: stacklight
spec:
  selector:
    app: prometheus
    component: alertmanager
    release: prometheus
  ports:
    - port: 80
      targetPort: 9093
  type: LoadBalancer
---
# Temporary expose Grafana UI
apiVersion: v1
kind: Service
metadata:
  name: grafana-lb
  namespace: stacklight
spec:
  selector:
    app: grafana
    release: grafana
  ports:
    - port: 80
      targetPort: grafana
  type: LoadBalancer
---
# Temporary expose Kibana UI
apiVersion: v1
kind: Service
metadata:
  name: kibana-lb
  namespace: stacklight
spec:
  selector:
    app: kibana
    release: kibana
  ports:
    - port: 80
      targetPort: kibana
  type: LoadBalancer
---
# Temporary expose Prometheus UI
apiVersion: v1
kind: Service
metadata:
  name: prometheus-server-lb
  namespace: stacklight
spec:
  selector:
    app: prometheus
    component: server
    release: prometheus
  ports:
    - port: 80
      targetPort: 9090
  type: LoadBalancer
